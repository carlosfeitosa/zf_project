<?php
require_once 'Zend/Json.php';


/*
 * retorna as mensagens do zend_form, em um formato padronizado para zend_form e zend_form_subForm
 */
function retornaZendFormMessages(Zend_Form $form = null){
	$messages = array();
	if ($form and $form->getMessages()) {
		$nomeFormulario = $form->getName();
		foreach ($form->getMessages() as $key => $value) {	
			foreach ($value as $messageKey => $messageValue) {
				if (is_subclass_of($form, 'Zend_Form_SubForm')) {
					$nomeElemento = $nomeFormulario . '-' . $messageKey;
					$valorElemento = $messageValue;
				} else {
					$nomeElemento = $key;
					$valorElemento = $value;
				}
				$messages[$nomeFormulario][$nomeElemento] = $valorElemento;
			}	
		}
	}
	return $messages;
}



$scripts           = null;
$modules 		   = null;
$dijits 		   = null;
$zendFormsMessages = array();
$formularios       = array();

$formsRenders = array();


$html = null;

$existeFormNoRequest = null;


// percorre as variáveis e objetos contidas na view
foreach ($this->getVars() as $key => $value){

	// verifica se existe objetos do tipo formulário na view
	if (is_subclass_of($value, 'Zend_Form')) {
			
		// verifica se existe subforms no formulário
		if ($value->getSubForms()) {	
			
			// percorre os subforms
			foreach ($value->getSubForms() as $subForm) {
				
				// verifica se existe o formulário no idResquestSource.
				if (isset($_REQUEST['idRequestSource']) and ($subForm->getName() == $_REQUEST['idRequestSource'])) {
					$existeFormNoRequest = true;
										
					$zendFormsMessages = retornaZendFormMessages($subForm);
					break;
				} else {
					$formularios[] = $key;
				}
			}
			 
		} else {
			
			//Basico_OPController_UtilOPController::print_debug($_REQUEST);
					
			// verifica se existe o formulário no request
			if (isset($_REQUEST['idRequestSource']) and ($value->getName() == $_REQUEST['idRequestSource'])) {
				
				$existeFormNoRequest = true;
				
				$zendFormsMessages = retornaZendFormMessages($value);
			} else {
				$formularios[] = $key;
			}
		}

	} else {
		
	}
}


// se não existir formulario(s) no reques
if (!$existeFormNoRequest) {
	
	// seta o form para Programmatic
	//Zend_Dojo_View_Helper_Dojo::setUseProgrammatic();
	//Zend_Dojo_View_Helper_Dojo::setUseDeclarative();
	
	// renderiza todos os formularios da view
	foreach ($formularios as $key => $value){
		$formsRenders[$value] = $this->$value->render();
	}
	
	// carrega os javaScripts caso exista.
	$scripts          = $this->dojo()->getJavascript();
	
	// carrega os módulos do dojo necessarios aos formulários.
	$modules          = $this->dojo()->getModules();
	
	$dijits           = $this->dojo()->getDijits();

	// varrega todos os formulários renderizados para serem devolvidos via json. 
	foreach ($formsRenders as $keyFormRender => $valueFormRender) {	
		$html[$keyFormRender] = $valueFormRender; 
	}
	
}else{
	//echo "existe form ou subform no request";
}


$js = <<<JS
alert('ok');
JS;
//$this->dojo()->addJavascript($js);

$response = array('view' => array('scripts'           => $scripts,
								  'modules'           => $modules,
								  'dijits'            => $dijits,
								  'zendFormsMessages' => $zendFormsMessages,
								  'html'  		      => $html,
								  
								 ),
				 );

//Basico_OPController_UtilOPController::print_debug($response);
echo Zend_Json::encode($response);
return;
//-----------------------------------------------








$zendFormsMessages = $this->form->getMessages();
$zendDijits = array();

foreach ($zendFormsMessages as $nomeFormulario => $elementos){

	$sub_form = $this->form->getSubForm($nomeFormulario);
	$i = 0;	
	foreach ($elementos as $nomeElemento => $parametros){
		
		/*
		 * monta dijits a partir do zend_form
		 */
		$elemento = $sub_form->getElement($nomeElemento);
		//Basico_OPController_UtilOPController::print_debug($elemento);
		
		$nomeDijit = $elemento->getBelongsTo().'-'.$elemento->getName(); // ou  $nomeDijit = $nomeFormulario.'-'.$nomeElemento;
		//Basico_OPController_UtilOPController::print_debug($nomeDijit);
		
		if ($elemento->dijitParams){
			$dijitParams = $elemento->getDijitParams();
			//Basico_OPController_UtilOPController::print_debug($elemento->getValue());
			//Basico_OPController_UtilOPController::print_debug($dijitParams);			
		}else{
			continue;
		}

		$zendDijits[$i]['id'] = $nomeDijit;
		$zendDijits[$i]['params'] = $dijitParams;

		//$zendDijits[$i]['params']['value'] = 'view value...';

		
														/*
														 * monta dijits a partir do dojo view helper
														 * apos o $this->form->render();
														 */
																//cria os elementos dijits.
																//$this->form->render();
		
														$nomeDijit = $nomeFormulario.'-'.$nomeElemento;
														$dijitParametros = $this->dojo()->getDijit($nomeDijit);
														$dijitParametros['value'] = 'view value...';
																	//array_walk_recursive($params, array($this, '_castBoolToString'));
																		
														$dijits[$i]['id'] = $nomeDijit;
														$dijits[$i]['params'] = $dijitParametros;
														//$dijits = $this->dojo()->getDijits();
														
														
												
														if ($dijitParametros){
															//$this->dojo()->setDijit($nomeDijit, $dijitParametros);
														}
		
		$i++;
		
		//array_walk_recursive($params, array($this, '_castBoolToString'));
	}

}

sleep(2);



if ($zendFormsMessages){
	echo Zend_Json::encode(array('view'=> array(
		//'content' => $this->layout()->content,
		//'content' => $content,
		//dojo require information
		//'modules' => $this->dojo()->getModules(),
		'dijits' => $this->dojo()->getDijits(),
		'zendFormDijits' => $zendDijits,
		'zendFormsMessages' => $zendFormsMessages,
	)));
}else {
	echo Zend_Json::encode(true);	
}