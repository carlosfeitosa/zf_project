<?php
require_once 'Zend/Json.php';

/*
 * retorna as mensagens do zend_form, em um formato padronizado para zend_form e zend_form_subForm
 */
function retornaZendFormMessages(Zend_Form $form = null){
	$messages = array();
	if ($form and $form->getMessages()) {
		$nomeFormulario = $form->getName();
		
		foreach ($form->getMessages() as $key => $value) {	
			foreach ($value as $messageKey => $messageValue) {
				if (is_subclass_of($form, 'Zend_Form_SubForm')) {
					$nomeElemento = $nomeFormulario . '-' . $messageKey;
					$valorElemento = $messageValue;
				} else {
					$nomeElemento = $key;
					$valorElemento = $value;
				}
				$messages[$nomeFormulario][$nomeElemento] = $valorElemento;
			}	
		}
	}
	return $messages;
}

function processaForm($form) {
	
	// declarando variavéis da função
	$existeFormNoRequest = null;
	$arrayScripts        = null;
	$zendFormsMessages   = null;
	$idResponseSource	 = null;
	$return              = null;
	
	// verifica se existe o formulário no idResquestSource.
	if (isset($_REQUEST['idRequestSource']) and ($form->getName() == $_REQUEST['idRequestSource'])) {
		// carrendo o id do formulário de resposta
		$idResponseSource = $_REQUEST['idRequestSource'];
		$return['idResponseSource'] = $idResponseSource;
		
		$existeFormNoRequest = true;
		$return['existeFormNoRequest'] = $existeFormNoRequest;
							
		// carrega array com as mensagens do form
		$zendFormsMessages = retornaZendFormMessages($form);
		$return['zendFormsMessages'] = $zendFormsMessages;
	} else {
		
	}
	
	// percorre todos os elementos do subform
	foreach ($form->getElements() as $elementoSubform){
		
		if ($elementoSubform->getType() == 'Rochedo_Form_Element_JavaScript') {
			$arrayScripts[] = $elementoSubform->getValue();
			$return['arrayScripts'] = $arrayScripts; 
		}
		
		// verifica se o elemento e do tipo hash
		if ($elementoSubform->getType() == 'Zend_Form_Element_Hash') {
			// renderizando elemento hash para ser gerado o novo valor, e ficar disponível em dojo()->getDijits();
			$elementoSubform->render();
		}
		
		if ($existeFormNoRequest) {
			// percorrendo o request em busca de elementos modificados.
			foreach ($_REQUEST[$form->getName()] as $keyRequest => $valueRequest) {
				
				// verificando se o valor do elemento enviado do request é diferente do valor existente no controller.
				if ( ($elementoSubform->getName() === $keyRequest) and ($elementoSubform->getValue() !== $valueRequest) ) {
					$idDijit = $form->getName() . '-' . $elementoSubform->getName();
					$dijitParametros['value'] = $elementoSubform->getValue();
																							
					$this->dojo()->addDijit($idDijit, $dijitParametros);
				}
			}
		}
	}
	
	return $return;
}

$arrayScripts        = array();
$modules 		     = null;
$dijits 		     = null;
$zendFormsMessages   = null;
$arrayHtmlElements   = array();
$existeFormNoRequest = null;
$idResponseSource	 = null;

// percorre as variáveis e objetos contidas na view
foreach ($this->getVars() as $keyVarView => $valueVarView){
	
	// verifica se a variável é do tipo array.
	if (is_array($valueVarView)) {
		
		// percorre o array enviado da view 
		foreach ($valueVarView as $key => $value) {
			
			if ($keyVarView === 'scripts') {
				$arrayScripts[] = $value;
				continue;
			}
			
			// se o conteúdo da possição percorrida não for um objeto, carrega o conteúdo no array $html[]. 
			if (!is_object($value)) {
				
				$arrayHtmlElements = Basico_OPController_UtilOPController::concatenaConteudoChaveArray($arrayHtmlElements, $keyVarView, $value);
			} else {

				// verifica se existe objetos do tipo formulário na view
				if (is_object($value) and is_subclass_of($value, 'Zend_Form')) {
						
					// verifica se existe subforms no formulário
					if ($value->getSubForms()) {
						
						// percorre os subforms
						foreach ($value->getSubForms() as $subForm) {						
							// processando formulario
							$dados = processaForm($subForm);

							if (isset($dados['existeFormNoRequest'])) {
								$existeFormNoRequest = $dados['existeFormNoRequest'];
							}
							if (isset($dados['arrayScripts'])) {
								$arrayScripts = $arrayScripts + $dados['arrayScripts'];
							}
							if (isset($dados['zendFormsMessages'])) {
								$zendFormsMessages = $dados['zendFormsMessages'];
							}
							if (isset($dados['idResponseSource'])) {
								$idResponseSource = $dados['idResponseSource'];
							}
						}
						
					} else {
						// processando formulario
						$dados = processaForm($value);

						if (isset($dados['existeFormNoRequest'])) {
							$existeFormNoRequest = $dados['existeFormNoRequest'];
						}
						if (isset($dados['arrayScripts'])) {
							$arrayScripts = $arrayScripts + $dados['arrayScripts'];
						}
						if (isset($dados['zendFormsMessages'])) {
							$zendFormsMessages = $dados['zendFormsMessages'];
						}
						if (isset($dados['idResponseSource'])) {
							$idResponseSource = $dados['idResponseSource'];
						}
					}
					
					// se não existir forms no request, renderiza o formulario em html para devolver ao cliente 
					if (!$existeFormNoRequest) {
						$arrayHtmlElements = Basico_OPController_UtilOPController::concatenaConteudoChaveArray($arrayHtmlElements, $keyVarView, $value->render());
					}
				}
			}
		}
	} else{
		
		// escreve conteúdo do javascript
		if ($keyVarView === 'scripts') {
			$arrayScripts[] = $valueVarView;
		}
		
		// escreve conteúdo do elemento html.
		$arrayHtmlElements = Basico_OPController_UtilOPController::concatenaConteudoChaveArray($arrayHtmlElements, $keyVarView, $valueVarView);		
	}
}

// se não existir formulario(s) no reques, carrega os módulos dos pormularios
if (!$existeFormNoRequest) {
	// carrega os módulos do dojo necessarios aos formulários.
	$modules = $this->dojo()->getModules();
	
}

// carregando os dijits.
$dijits = $this->dojo()->getDijits();

// carregando title, script e link do header
$header['title']  = $this->headTitle()->toString();
$header['link']   = $this->headLink()->toString();
$header['script'] = $this->headScript()->toString();

// monta resposta para o cliente...
$response = array('view' => array('header'            => $header,
								  'scripts'           => $arrayScripts,
								  'modules'           => $modules,
								  'dijits'            => $dijits,
								  'idResponseSource'  => $idResponseSource,
								  'zendFormsMessages' => $zendFormsMessages,
								  'html'  		      => $arrayHtmlElements,
								 ),
				 );

echo Zend_Json::encode($response);